#include <bits/stdc++.h>
using namespace std;
using ui = unsigned int;
using ull = unsigned long long;
using ll = long long;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
const int maxn = 2e5 + 10;
const int mod = 1000000007;
#define inl inline
#define endl '\n'
#define fr(i, a, b) for (int i = a; i <= b; i++)
#define ford(i, a, b) for (int i = a; i >= b; i--)
#define forall(i, a) for (auto &i : a)
istream &operator>>(istream &in, vector<int> &v)
{
    for (auto &i : v)
        in >> i;
    return in;
}
ostream &operator<<(ostream &out, vector<int> &v)
{
    for (auto &i : v)
        out << i << " ";
    return out;
}

#define int ll
string s[220];
void init()
{
    s[0] = "1";
    s[1] = "2";
    s[2] = "4";
    s[3] = "8";
    s[4] = "16";
    s[5] = "32";
    s[6] = "64";
    s[7] = "128";
    s[8] = "256";
    s[9] = "512";
    s[10] = "1024";
    s[11] = "2048";
    s[12] = "4096";
    s[13] = "8192";
    s[14] = "16384";
    s[15] = "32768";
    s[16] = "65536";
    s[17] = "131072";
    s[18] = "262144";
    s[19] = "524288";
    s[20] = "1048576";
    s[21] = "2097152";
    s[22] = "4194304";
    s[23] = "8388608";
    s[24] = "16777216";
    s[25] = "33554432";
    s[26] = "67108864";
    s[27] = "134217728";
    s[28] = "268435456";
    s[29] = "536870912";
    s[30] = "1073741824";
    s[31] = "2147483648";
    s[32] = "4294967296";
    s[33] = "8589934592";
    s[34] = "17179869184";
    s[35] = "34359738368";
    s[36] = "68719476736";
    s[37] = "137438953472";
    s[38] = "274877906944";
    s[39] = "549755813888";
    s[40] = "1099511627776";
    s[41] = "2199023255552";
    s[42] = "4398046511104";
    s[43] = "8796093022208";
    s[44] = "17592186044416";
    s[45] = "35184372088832";
    s[46] = "70368744177664";
    s[47] = "140737488355328";
    s[48] = "281474976710656";
    s[49] = "562949953421312";
    s[50] = "1125899906842624";
    s[51] = "2251799813685248";
    s[52] = "4503599627370496";
    s[53] = "9007199254740992";
    s[54] = "18014398509481984";
    s[55] = "36028797018963968";
    s[56] = "72057594037927936";
    s[57] = "144115188075855872";
    s[58] = "288230376151711744";
    s[59] = "576460752303423488";
    s[60] = "1152921504606846976";
    s[61] = "2305843009213693952";
    s[62] = "4611686018427387904";
    s[63] = "9223372036854775808";
    s[64] = "18446744073709551616";
    s[65] = "36893488147419103232";
    s[66] = "73786976294838206464";
    s[67] = "147573952589676412928";
    s[68] = "295147905179352825856";
    s[69] = "590295810358705651712";
    s[70] = "1180591620717411303424";
    s[71] = "2361183241434822606848";
    s[72] = "4722366482869645213696";
    s[73] = "9444732965739290427392";
    s[74] = "18889465931478580854784";
    s[75] = "37778931862957161709568";
    s[76] = "75557863725914323419136";
    s[77] = "151115727451828646838272";
    s[78] = "302231454903657293676544";
    s[79] = "604462909807314587353088";
    s[80] = "1208925819614629174706176";
    s[81] = "2417851639229258349412352";
    s[82] = "4835703278458516698824704";
    s[83] = "9671406556917033397649408";
    s[84] = "19342813113834066795298816";
    s[85] = "38685626227668133590597632";
    s[86] = "77371252455336267181195264";
    s[87] = "154742504910672534362390528";
    s[88] = "309485009821345068724781056";
    s[89] = "618970019642690137449562112";
    s[90] = "1237940039285380274899124224";
    s[91] = "2475880078570760549798248448";
    s[92] = "4951760157141521099596496896";
    s[93] = "9903520314283042199192993792";
    s[94] = "19807040628566084398385987584";
    s[95] = "39614081257132168796771975168";
    s[96] = "79228162514264337593543950336";
    s[97] = "158456325028528675187087900672";
    s[98] = "316912650057057350374175801344";
    s[99] = "633825300114114700748351602688";
    s[100] = "1267650600228229401496703205376";
    s[101] = "2535301200456458802993406410752";
    s[102] = "5070602400912917605986812821504";
    s[103] = "10141204801825835211973625643008";
    s[104] = "20282409603651670423947251286016";
    s[105] = "40564819207303340847894502572032";
    s[106] = "81129638414606681695789005144064";
    s[107] = "162259276829213363391578010288128";
    s[108] = "324518553658426726783156020576256";
    s[109] = "649037107316853453566312041152512";
    s[110] = "1298074214633706907132624082305024";
    s[111] = "2596148429267413814265248164610048";
    s[112] = "5192296858534827628530496329220096";
    s[113] = "10384593717069655257060992658440192";
    s[114] = "20769187434139310514121985316880384";
    s[115] = "41538374868278621028243970633760768";
    s[116] = "83076749736557242056487941267521536";
    s[117] = "166153499473114484112975882535043072";
    s[118] = "332306998946228968225951765070086144";
    s[119] = "664613997892457936451903530140172288";
    s[120] = "1329227995784915872903807060280344576";
    s[121] = "2658455991569831745807614120560689152";
    s[122] = "5316911983139663491615228241121378304";
    s[123] = "10633823966279326983230456482242756608";
    s[124] = "21267647932558653966460912964485513216";
    s[125] = "42535295865117307932921825928971026432";
    s[126] = "85070591730234615865843651857942052864";
    s[127] = "170141183460469231731687303715884105728";
    s[128] = "340282366920938463463374607431768211456";
    s[129] = "680564733841876926926749214863536422912";
    s[130] = "1361129467683753853853498429727072845824";
    s[131] = "2722258935367507707706996859454145691648";
    s[132] = "5444517870735015415413993718908291383296";
    s[133] = "10889035741470030830827987437816582766592";
    s[134] = "21778071482940061661655974875633165533184";
    s[135] = "43556142965880123323311949751266331066368";
    s[136] = "87112285931760246646623899502532662132736";
    s[137] = "174224571863520493293247799005065324265472";
    s[138] = "348449143727040986586495598010130648530944";
    s[139] = "696898287454081973172991196020261297061888";
    s[140] = "1393796574908163946345982392040522594123776";
    s[141] = "2787593149816327892691964784081045188247552";
    s[142] = "5575186299632655785383929568162090376495104";
    s[143] = "11150372599265311570767859136324180752990208";
    s[144] = "22300745198530623141535718272648361505980416";
    s[145] = "44601490397061246283071436545296723011960832";
    s[146] = "89202980794122492566142873090593446023921664";
    s[147] = "178405961588244985132285746181186892047843328";
    s[148] = "356811923176489970264571492362373784095686656";
    s[149] = "713623846352979940529142984724747568191373312";
    s[150] = "1427247692705959881058285969449495136382746624";
    s[151] = "2854495385411919762116571938898990272765493248";
    s[152] = "5708990770823839524233143877797980545530986496";
    s[153] = "11417981541647679048466287755595961091061972992";
    s[154] = "22835963083295358096932575511191922182123945984";
    s[155] = "45671926166590716193865151022383844364247891968";
    s[156] = "91343852333181432387730302044767688728495783936";
    s[157] = "182687704666362864775460604089535377456991567872";
    s[158] = "365375409332725729550921208179070754913983135744";
    s[159] = "730750818665451459101842416358141509827966271488";
    s[160] = "1461501637330902918203684832716283019655932542976";
    s[161] = "2923003274661805836407369665432566039311865085952";
    s[162] = "5846006549323611672814739330865132078623730171904";
    s[163] = "11692013098647223345629478661730264157247460343808";
    s[164] = "23384026197294446691258957323460528314494920687616";
    s[165] = "46768052394588893382517914646921056628989841375232";
    s[166] = "93536104789177786765035829293842113257979682750464";
    s[167] = "187072209578355573530071658587684226515959365500928";
    s[168] = "374144419156711147060143317175368453031918731001856";
    s[169] = "748288838313422294120286634350736906063837462003712";
    s[170] = "1496577676626844588240573268701473812127674924007424";
    s[171] = "2993155353253689176481146537402947624255349848014848";
    s[172] = "5986310706507378352962293074805895248510699696029696";
    s[173] = "11972621413014756705924586149611790497021399392059392";
    s[174] = "23945242826029513411849172299223580994042798784118784";
    s[175] = "47890485652059026823698344598447161988085597568237568";
    s[176] = "95780971304118053647396689196894323976171195136475136";
    s[177] = "191561942608236107294793378393788647952342390272950272";
    s[178] = "383123885216472214589586756787577295904684780545900544";
    s[179] = "766247770432944429179173513575154591809369561091801088";
    s[180] = "1532495540865888858358347027150309183618739122183602176";
    s[181] = "3064991081731777716716694054300618367237478244367204352";
    s[182] = "6129982163463555433433388108601236734474956488734408704";
    s[183] = "12259964326927110866866776217202473468949912977468817408";
    s[184] = "24519928653854221733733552434404946937899825954937634816";
    s[185] = "49039857307708443467467104868809893875799651909875269632";
    s[186] = "98079714615416886934934209737619787751599303819750539264";
    s[187] = "196159429230833773869868419475239575503198607639501078528";
    s[188] = "392318858461667547739736838950479151006397215279002157056";
    s[189] = "784637716923335095479473677900958302012794430558004314112";
    s[190] = "1569275433846670190958947355801916604025588861116008628224";
    s[191] = "3138550867693340381917894711603833208051177722232017256448";
    s[192] = "6277101735386680763835789423207666416102355444464034512896";
    s[193] = "12554203470773361527671578846415332832204710888928069025792";
    s[194] = "25108406941546723055343157692830665664409421777856138051584";
    s[195] = "50216813883093446110686315385661331328818843555712276103168";
    s[196] = "100433627766186892221372630771322662657637687111424552206336";
    s[197] = "200867255532373784442745261542645325315275374222849104412672";
    s[198] = "401734511064747568885490523085290650630550748445698208825344";
    s[199] = "803469022129495137770981046170581301261101496891396417650688";
    s[200] = "1606938044258990275541962092341162602522202993782792835301376";
}
int make(string a, string b)
{
    int m = a.size();
    int n = b.size();
    int cnt = 0;

    fr(i, 0, m - 1)
    {
        if (a[i] == b[cnt])
        {
            cnt++;
        }
        if (cnt == n)
        {
            break;
        }
    }
    return n + m - 2 * cnt;
}


void solve()
{
    string ss;
    cin >> ss;
    int ans = (1e18);
    string str = "";
    for (int i = 0; i <= 62; i++)
    {
        auto now = s[i];
        int res = make(ss, now);
        if (res <= ans)
        {
            if (res < ans)
                str = (str, now);
            ans = res;
        }
    }
    // if(ans==(1 << 30))
    // {
    //     cout<<-1<<endl;
    //     return;
    // }
    cout << ans << " ";
    cout << str << endl;
}
signed main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    init();
    int T = 1;
    // cout<<v.back()<<endl;
    cin >> T;
    while (T--)
    {
        solve();
    }
    return 0;
}